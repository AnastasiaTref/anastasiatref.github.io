/*!
Animate.css - http://daneden.me/animate
Licensed under the MIT license - http://opensource.org/licenses/MIT
Copyright (c) 2015 Daniel Eden
*/

body {
	-webkit-backface-visibility: hidden;
}

.animated {
	-webkit-animation-duration: 1s;
	animation-duration: 1s;
	-webkit-animation-fill-mode: both;
	animation-fill-mode: both;
}

.animated.infinite {
	-webkit-animation-iteration-count: infinite;
	animation-iteration-count: infinite;
}

.animated.hinge {
	-webkit-animation-duration: 2s;
	animation-duration: 2s;
}

.animated.bounceIn,
.animated.bounceOut {
	-webkit-animation-duration: 0.75s;
	animation-duration: 0.75s;
}

.animated.flipOutX,
.animated.flipOutY {
	-webkit-animation-duration: 0.75s;
	animation-duration: 0.75s;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
	display: block;
}

body {
	line-height: 1;
}

ol,
ul {
	list-style: none;
}

blockquote,
q {
	quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
	content: '';
	content: none;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

button {
	background: transparent;
	border-style: none;
}

img {
	display: block;
	max-width: 100%;
	height: auto;
	border: 0;
	outline: none;
}

figure,
iframe,
video {
	max-width: 100%;
}

[hidden] {
	display: none;
}

select {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}

select::-ms-expand {
	display: none;
}

/*--------------------------------------------------
				Common Colors
---------------------------------------------------*/

/* @font-face {
    font-family: 'ArbatC';
    src: url('../fonts/ArbatC/ArbatC.eot');
    src: url('../fonts/ArbatC/ArbatC.eot#iefix') format('embedded-opentype'),
    url('../fonts/ArbatC/ArbatC.ttf') format('truetype'),
    url('../fonts/ArbatC/ArbatC.woff') format('woff'),
    url('../fonts/ArbatC/ArbatC.svg#ArbatC') format('svg');
    font-weight: normal;
    font-style: normal;
} */

/* .sprite-icons {
    background-image: url(../img/sprite-icons.png);
    background-repeat: no-repeat;
    display: block;
}

.icon1 {
    width: 46px;
    height: 46px;
    background-position: -5px -5px;
}

 */

*::-webkit-input-placeholder {
	font-size: 16px;
	color: #723f32;
	opacity: 1;
	-webkit-transition: opacity 0.3s ease;
	-o-transition: opacity 0.3s ease;
	transition: opacity 0.3s ease;
	text-overflow: ellipsis;
}

*::-moz-placeholder {
	font-size: 16px;
	color: #723f32;
	opacity: 1;
	-webkit-transition: opacity 0.3s ease;
	-o-transition: opacity 0.3s ease;
	transition: opacity 0.3s ease;
	text-overflow: ellipsis;
}

*:-ms-input-placeholder {
	font-size: 16px;
	color: #723f32;
	opacity: 1;
	-webkit-transition: opacity 0.3s ease;
	-o-transition: opacity 0.3s ease;
	transition: opacity 0.3s ease;
	text-overflow: ellipsis;
}

*::-ms-input-placeholder {
	font-size: 16px;
	color: #723f32;
	opacity: 1;
	-webkit-transition: opacity 0.3s ease;
	-o-transition: opacity 0.3s ease;
	transition: opacity 0.3s ease;
	text-overflow: ellipsis;
}

*::placeholder {
	font-size: 16px;
	color: #723f32;
	opacity: 1;
	-webkit-transition: opacity 0.3s ease;
	-o-transition: opacity 0.3s ease;
	transition: opacity 0.3s ease;
	-o-text-overflow: ellipsis;
	text-overflow: ellipsis;
}

*:focus::-webkit-input-placeholder {
	opacity: 0;
}

*:focus::-moz-placeholder {
	opacity: 0;
}

*:focus:-ms-input-placeholder {
	opacity: 0;
}

*:focus::-ms-input-placeholder {
	opacity: 0;
}

*:focus::placeholder {
	opacity: 0;
}

*,
:before,
:after {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	outline: 0;
}

*::-moz-selection {
	background: #723f32;
	color: #ffffff;
}

*::selection {
	background: #723f32;
	color: #ffffff;
}

.visuallyHidden {
	position: absolute;
	overflow: hidden;
	clip: rect(0 0 0 0);
	height: 1px;
	width: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
}

b {
	font-weight: 700;
}

a {
	color: #723f32;
	font-weight: 600;
	cursor: pointer;
}

.main-wrapper {
	overflow: hidden;
}

html {
	font-size: 16px;
}

body {
	font-family: Helvetica, sans-serif;
	font-size: 1rem;
	font-weight: normal;
	color: #867e72;
	line-height: 1.5;
	position: relative;
	background: #FCF8F1;
	background: url("../images/pattern.png") #F3DDBA;
}

.s-main {
	background: #FCF8F1;
	width: 100%;
	max-width: 100%;
	padding-left: 10px;
	padding-right: 10px;
	margin: 0 auto;
	-webkit-box-shadow: 0 5px 10px #723f32;
	box-shadow: 0 5px 10px #723f32;
}

.caption {
	font-size: 27px;
	font-weight: 700;
	margin-bottom: 15px;
	text-align: center;
	position: relative;
	padding-bottom: 25px;
	line-height: 1.1;
	color: #723f32;
	text-transform: uppercase;
	font-family: "Oswald", sans-serif;
}

.caption:after {
	content: "";
	display: block;
	position: absolute;
	width: 265px;
	height: 21px;
	background: url("../images/desktop/venzel.png") no-repeat center/contain;
	left: 50%;
	bottom: 0;
	-webkit-transform: translateX(-50%);
	-ms-transform: translateX(-50%);
	transform: translateX(-50%);
}

.container {
	width: 100%;
	max-width: 100%;
	padding-left: 10px;
	padding-right: 10px;
	margin: 0 auto;
}

a.download-link {
	display: inline-block;
	color: #723f32;
	font-weight: 700;
	position: relative;
	text-decoration: none;
	text-transform: uppercase;
	font-size: 15px;
	margin: 20px 0;
	font-family: "Oswald", sans-serif;
}

a.download-link:after {
	content: "";
	display: block;
	position: absolute;
	width: 100%;
	height: 2px;
	background: #723f32;
	left: 0;
	bottom: -2px;
	-webkit-transition: width .3s ease-out;
	-o-transition: width .3s ease-out;
	transition: width .3s ease-out;
}

a.download-link:hover:after {
	width: 0;
}

.header {
	background: #F3DDBA;
}

.header__inner {
	position: relative;
	height: 150px;
}

.header__content {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-webkit-flex-direction: row;
	-ms-flex-direction: row;
	flex-direction: row;
	-webkit-box-align: center;
	-webkit-align-items: center;
	-ms-flex-align: center;
	align-items: center;
	padding: 20px 0;
}

.header .logo {
	width: 80px;
	margin-right: 20px;
}

.header .headline {
	font-size: 19px;
	line-height: 1.1;
}

.s-navbar {
	background: #723f32;
	-webkit-box-shadow: 0 5px 10px #723f32;
	box-shadow: 0 5px 10px #723f32;
	position: relative;
	width: 100%;
	z-index: 2;
}

.s-navbar .container {
	padding: 0;
}

.s-navbar.fixed {
	position: fixed;
	left: 0;
	top: 0;
}

.navbar {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	width: 100%;
	height: 55px;
	-webkit-box-align: center;
	-webkit-align-items: center;
	-ms-flex-align: center;
	align-items: center;
	position: relative;
}

.navbar__list {
	display: block;
	width: 100%;
	background: #723f32;
}

.navbar .navbar__list {
	display: none;
	position: absolute;
	top: 55px;
	left: 0;
	-webkit-transition: .3s;
	-o-transition: .3s;
	transition: .3s;
}

.navbar .navbar--active {
	display: block;
	z-index: 1;
}

.navbar__link {
	display: inline-block;
	height: 55px;
	width: 100%;
	color: #FCF8F1;
	font-size: 15px;
	text-transform: uppercase;
	cursor: pointer;
	font-family: "Oswald", sans-serif;
}

.navbar__link:hover {
	position: relative;
}

.navbar__link:hover:after {
	content: "";
	display: block;
	position: absolute;
	width: 100%;
	height: 3px;
	background: #FCF8F1;
	bottom: 0;
	left: 0;
}

.sandwich {
	height: 25px;
	width: 30px;
	cursor: pointer;
	display: block;
	position: absolute;
	right: 25px;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
	z-index: 10;
}

.sandwich__line {
	display: block;
	width: 100%;
	height: 4px;
	-webkit-transition: 0.3s;
	-o-transition: 0.3s;
	transition: 0.3s;
	-webkit-border-radius: 0;
	border-radius: 0;
	margin-bottom: 6.5px;
	background-color: #867e72;
}

.sandwich__line:last-child {
	margin-bottom: 0;
}

.sandwich--active .sandwich__line {
	opacity: 0;
}

.sandwich--active .sandwich__line:first-of-type {
	opacity: 1;
	-webkit-transform: translateY(10.5px) rotate(-135deg);
	-ms-transform: translateY(10.5px) rotate(-135deg);
	transform: translateY(10.5px) rotate(-135deg);
}

.sandwich--active .sandwich__line:last-of-type {
	opacity: 1;
	-webkit-transform: translateY(-10.5px) rotate(135deg);
	-ms-transform: translateY(-10.5px) rotate(135deg);
	transform: translateY(-10.5px) rotate(135deg);
}

.s-info {
	padding: 30px 0;
}

.s-info .caption span {
	display: block;
	line-height: 1.5;
}

.s-info .caption span.data {
	font-size: 25px;
}

.s-info .caption span.city {
	font-size: 18px;
}

.s-info__content p {
	margin-bottom: 10px;
}

.s-program {
	padding: 30px 0;
}

.s-program__content {
	display: block;
}

.s-register__main {
	padding: 15px;
	position: relative;
	z-index: 1;
}

.s-register__content {
	padding: 25px 0;
}

.enrollment-form {
	max-width: 380px;
}

.form-group {
	display: block;
	margin-bottom: 10px;
	position: relative;
}

.form-group__label {
	display: block;
	color: #867e72;
	font-size: 18px;
	font-weight: 700;
}

.form-group__field {
	position: relative;
	padding: 10px;
	font-size: 16px;
	margin-bottom: 10px;
	width: 100%;
	border: 1px solid #723f32;
	background-color: #FCF8F1;
	color: #723f32;
	-webkit-border-radius: 5px;
	border-radius: 5px;
	-webkit-transition: background-color .3s, border-color .4s;
	-o-transition: background-color .3s, border-color .4s;
	transition: background-color .3s, border-color .4s;
}

.form-group__field:focus,
.form-group__field:hover {
	outline: none;
	border-color: #723f32;
	-webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.2);
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.2);
}

.button {
	position: relative;
	display: block;
	padding: 15px 25px;
	text-align: center;
	font-size: 16px;
	font-weight: 500;
	text-transform: uppercase;
	color: #FCF8F1;
	line-height: 1;
	background: #723f32;
	outline: none;
	-webkit-border-radius: 5px;
	border-radius: 5px;
	cursor: pointer;
}

.s-placement .container {
	position: relative;
	padding-bottom: 290px;
}

.s-placement .container:after {
	content: "";
	display: block;
	position: absolute;
	background: url("../images/piter2.png") no-repeat center/contain;
	width: 680px;
	height: 263px;
	bottom: 0;
	left: 50%;
	-webkit-transform: translateX(-50%);
	-ms-transform: translateX(-50%);
	transform: translateX(-50%);
}

.s-placement__inner {
	padding: 30px 0;
}

.b-placement__title {
	text-align: center;
	font-size: 30px;
	margin-bottom: 20px;
}

.b-placement__title span {
	display: block;
	font-size: 14px;
}

.b-placement__content {
	text-align: center;
}

.slider {
	margin: 20px auto;
}

.accordeon {
	width: 100%;
	margin: 30px auto;
}

.accordeon__list {
	display: inline-block;
	text-align: left;
	width: 100%;
}

.accordeon__item {
	padding: 2px;
	-moz-user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

.accordeon__trigger {
	display: block;
	padding: 10px;
	background-color: #fff;
	-webkit-transition: .2s;
	-o-transition: .2s;
	transition: .2s;
	font-size: 20px;
	text-align: center;
}

.accordeon__trigger:hover {
	background-color: #F3DDBA;
	-webkit-transition: .2s;
	-o-transition: .2s;
	transition: .2s;
}

.accordeon__inner {
	display: none;
	padding: 10px 0 10px 20px;
	background: #fff;
}

.accordeon__inner h4 {
	font-weight: 700;
	margin-bottom: 10px;
}

.accordeon__inner ul {
	margin-bottom: 10px;
	list-style: inside;
}

.active .accordeon__trigger {
	background-color: #fff;
}

@media only screen and (min-width: 768px) {

.caption {
	font-size: 35px;
	padding-bottom: 50px;
	margin-bottom: 50px;
}

.caption:after {
	content: "";
	display: block;
	position: absolute;
	width: 580px;
	height: 40px;
}

a.download-link {
	font-size: 20px;
}

.header__inner:after {
	content: "";
	display: block;
	position: absolute;
	background: url("../images/desktop/fonar.png") no-repeat center/contain;
	width: 100px;
	height: 125px;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
	right: 0;
}

.header .headline {
	font-size: 30px;
}

.s-navbar {
	height: auto;
}

.navbar .navbar__list {
	position: relative;
	top: 0;
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	margin-left: 0;
	margin-right: 0;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-webkit-flex-direction: row;
	-ms-flex-direction: row;
	flex-direction: row;
}

.navbar__item {
	-webkit-box-flex: 1;
	-webkit-flex-grow: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
	text-align: center;
}

.sandwich {
	display: none;
}

.s-info {
	padding: 50px;
}

.s-info__content {
	max-width: 800px;
	position: relative;
}

.s-info__content:after {
	content: "";
	display: block;
	position: absolute;
	background: url("../images/desktop/knigi4.png") no-repeat center/contain;
	width: 300px;
	height: 200px;
	bottom: -20px;
	right: -100px;
}

.s-program {
	padding: 50px;
}

.s-register__main {
	padding: 45px 75px;
}

.s-placement__inner {
	padding: 50px;
}

.slider {
	margin: 30px auto;
	background: #fff;
	padding: 25px;
}

}

@media only screen and (min-width: 960px) {

html {
	font-size: 17px;
}

}

@media only screen and (min-width: 1140px) {

.s-main {
	width: 1140px;
}

.container {
	width: 1140px;
}

}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
